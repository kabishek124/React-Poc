-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."GroupMembers"
(
    group_member_id bigint NOT NULL DEFAULT nextval('"GroupMembers_group_member_id_seq"'::regclass),
    group_id bigint,
    group_member bigint NOT NULL,
    CONSTRAINT "GroupMembers_pkey" PRIMARY KEY (group_member)
);

CREATE TABLE IF NOT EXISTS public."Groups"
(
    group_id bigint NOT NULL DEFAULT nextval('"Groups_group_id_seq"'::regclass),
    group_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    group_description character varying(100) COLLATE pg_catalog."default",
    number_of_members integer,
    created_on timestamp with time zone[],
    no_of_surveys_shared integer,
    deleted_on timestamp with time zone[],
    updated_on timestamp with time zone NOT NULL,
    created_by bigint,
    CONSTRAINT "Groups_pkey" PRIMARY KEY (group_id)
);

CREATE TABLE IF NOT EXISTS public."OptionCategories"
(
    option_category_id bigint NOT NULL DEFAULT nextval('"OptionCategories_option_category_id_seq"'::regclass),
    option_category character varying(150) COLLATE pg_catalog."default",
    option character varying(250) COLLATE pg_catalog."default",
    CONSTRAINT "OptionCategories_pkey" PRIMARY KEY (option_category_id)
);

CREATE TABLE IF NOT EXISTS public."Questions"
(
    question_id bigint NOT NULL DEFAULT nextval('"Questions_question_id_seq"'::regclass),
    survey_id bigint,
    question character varying(1000) COLLATE pg_catalog."default",
    question_category character varying(150) COLLATE pg_catalog."default",
    option_category_id bigint,
    option_text character varying(250) COLLATE pg_catalog."default",
    option_score integer,
    response_count integer,
    CONSTRAINT "Questions_pkey" PRIMARY KEY (question_id)
);

ALTER TABLE IF EXISTS public."GroupMembers"
    ADD CONSTRAINT "GroupMembers_group_id_fkey" FOREIGN KEY (group_id)
    REFERENCES public."Groups" (group_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Questions"
    ADD CONSTRAINT "Questions_option_category_id_fkey" FOREIGN KEY (option_category_id)
    REFERENCES public."OptionCategories" (option_category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;